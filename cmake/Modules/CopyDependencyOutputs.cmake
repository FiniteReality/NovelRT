function(copy_dependency_outputs target dependency)
  get_target_property(dependency_files_list ${dependency} COPY_FILES)
  get_target_property(dependency_binary_dir ${dependency} BINARY_DIR)

  string(REPLACE "${CMAKE_BINARY_DIR}/" "" local_path "${CMAKE_CURRENT_BINARY_DIR}")

  foreach(input ${dependency_files_list})
    if(NOVELRT_GENERATOR_IS_MULTI_CONFIG)
      string(REPLACE "${dependency_binary_dir}/" "" output "${input}")
      string(REPLACE "${CMAKE_CFG_INTDIR}/" "" output "${output}")

      list(APPEND outputs "${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}/${output}")

      add_custom_command(
        OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}/${output}"
        COMMAND ${CMAKE_COMMAND} -E copy "${input}" "${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}/${output}"
        COMMENT "Generating ${local_path}/${CMAKE_CFG_INTDIR}/${output}")
    else()
      string(REPLACE "${dependency_binary_dir}/" "" output "${input}")

      list(APPEND outputs "${CMAKE_CURRENT_BINARY_DIR}/${output}")

      add_custom_command(
        OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/${output}"
        COMMAND ${CMAKE_COMMAND} -E copy "${input}" "${CMAKE_CURRENT_BINARY_DIR}/${output}"
        COMMENT "Generating ${local_path}/${output}")
    endif()
  endforeach()

  add_custom_target("${target}_copy_outputs_from_${dependency}"
    DEPENDS "${outputs}")

  add_dependencies("${target}_copy_outputs_from_${dependency}" ${dependency})
  add_dependencies(${target} "${target}_copy_outputs_from_${dependency}")

  if(ARGC GREATER 2)
    set(${ARGV2} ${outputs} PARENT_SCOPE)
  endif()
endfunction()

function(add_dependency_outputs target)
  get_target_property(output_files_list ${target} COPY_FILES)

  if(output_files_list)
    set_target_properties(${target}
      PROPERTIES
        COPY_FILES "${output_files_list};${ARGN}")
  else()
    set_target_properties(${target}
      PROPERTIES
        COPY_FILES "${ARGN}")
  endif()

  mark_as_advanced(output_files_list)
endfunction()

function(install_dependency_outputs)
  cmake_parse_arguments(INSTALL_DEPENDENCY_OUTPUTS "" "DESTINATION" "FILES" ${ARGN})

  # Add a debug message to our output so users debugging cmake_install know snippets we've generated
  list(APPEND install_files_snippet "# Generated by install_dependency_outputs")

  if(NOVELRT_GENERATOR_IS_MULTI_CONFIG)
    foreach(INSTALL_DEPENDENCY_OUTPUTS_CONFIG ${CMAKE_CONFIGURATION_TYPES})
      string(REPLACE "${CMAKE_CFG_INTDIR}/" "${INSTALL_DEPENDENCY_OUTPUTS_CONFIG}/" INSTALL_DEPENDENCY_OUTPUTS_FILENAME "${local_path}")

      string(REGEX MATCHALL "." config_characters "${INSTALL_DEPENDENCY_OUTPUTS_CONFIG}")

      set(INSTALL_DEPENDENCY_OUTPUTS_CONFIG_REGEX "^(")
      foreach(character IN LISTS config_characters)
        string(TOUPPER "${character}" character_uppercase)
        string(TOLOWER "${character}" character_lowercase)
        set(INSTALL_DEPENDENCY_OUTPUTS_CONFIG_REGEX "${INSTALL_DEPENDENCY_OUTPUTS_CONFIG_REGEX}[${character_uppercase}${character_lowercase}]")
      endforeach()
      set(INSTALL_DEPENDENCY_OUTPUTS_CONFIG_REGEX "${INSTALL_DEPENDENCY_OUTPUTS_CONFIG_REGEX})$")

      string(CONFIGURE
[[@INSTALL_DEPENDENCY_OUTPUTS_CONFIG_PREFIX@if("${CMAKE_INSTALL_CONFIG_NAME}" MATCHES "@INSTALL_DEPENDENCY_OUTPUTS_CONFIG_REGEX@")]]
        snippet @ONLY)

      list(APPEND install_files_snippet "${snippet}")

      foreach(INSTALL_DEPENDENCY_OUTPUTS_FILEPATH IN LISTS INSTALL_DEPENDENCY_OUTPUTS_FILES)
        string(REPLACE "${CMAKE_CURRENT_BINARY_DIR}/" "" local_path "${INSTALL_DEPENDENCY_OUTPUTS_FILEPATH}")
        string(REPLACE "${CMAKE_CFG_INTDIR}/" "" local_path "${local_path}")

        set(INSTALL_DEPENDENCY_OUTPUTS_FILENAME "${INSTALL_DEPENDENCY_OUTPUTS_CONFIG}/${local_path}")
        string(CONFIGURE
[[  file(INSTALL DESTINATION "$ENV{DESTDIR}${CMAKE_INSTALL_PREFIX}/@INSTALL_DEPENDENCY_OUTPUTS_DESTINATION@/@INSTALL_DEPENDENCY_OUTPUTS_FILENAME@" TYPE FILE FILES "@INSTALL_DEPENDENCY_OUTPUTS_FILEPATH@")]]
          snippet @ONLY)

        list(APPEND install_files_snippet "${snippet}")
      endforeach()

      if(NOT INSTALL_DEPENDENCY_OUTPUTS_CONFIG_PREFIX)
        set(INSTALL_DEPENDENCY_OUTPUTS_CONFIG_PREFIX "else")
      endif()
    endforeach()

    list(APPEND install_files_snippet "endif()")
  else()
    foreach(INSTALL_DEPENDENCY_OUTPUTS_FILEPATH IN LISTS INSTALL_DEPENDENCY_OUTPUTS_FILES)
      string(REPLACE "${CMAKE_CURRENT_BINARY_DIR}/" "" local_path "${INSTALL_DEPENDENCY_OUTPUTS_FILEPATH}")

      set(INSTALL_DEPENDENCY_OUTPUTS_FILENAME "${local_path}")
      string(CONFIGURE
[[if(EXISTS "$ENV{DESTDIR}${CMAKE_INSTALL_PREFIX}/@INSTALL_DEPENDENCY_OUTPUTS_DESTINATION@/@INSTALL_DEPENDENCY_OUTPUTS_FILENAME@" AND
     IS_NOT_SYMLINK "$ENV{DESTDIR}${CMAKE_INSTALL_PREFIX}/@INSTALL_DEPENDENCY_OUTPUTS_DESTINATION@/@INSTALL_DEPENDENCY_OUTPUTS_FILENAME@")
    file(RPATH_CHECK
         FILE "$ENV{DESTDIR}${CMAKE_INSTALL_PREFIX}/@INSTALL_DEPENDENCY_OUTPUTS_DESTINATION@/@INSTALL_DEPENDENCY_OUTPUTS_FILENAME@"
         RPATH "")
  endif()
  file(INSTALL DESTINATION "$ENV{DESTDIR}${CMAKE_INSTALL_PREFIX}/@INSTALL_DEPENDENCY_OUTPUTS_DESTINATION@" TYPE FILE FILES "@INSTALL_DEPENDENCY_OUTPUTS_FILEPATH@")]]
        snippet @ONLY)

      list(APPEND install_files_snippet "${snippet}")
    endforeach()
  endif()

  if(WIN32)
    list(JOIN install_files_snippet "\r\n  " install_files_snippet)
  else()
    list(JOIN install_files_snippet "\n  " install_files_snippet)
  endif()

  install(CODE "${install_files_snippet}")
endfunction()
